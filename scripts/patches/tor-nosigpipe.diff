From c38a5487a5410403d93c3b80df91acc911b14d3f Mon Sep 17 00:00:00 2001
From: John Beanie <j.beanie@ynd-consult.com>
Date: Sun, 10 Jul 2016 15:14:26 +0200
Subject: [PATCH 1/2] Removing all potential SIGPIPEs (OSX only, non-compat).

---
 src/common/address.c        | 2 ++
 src/common/compat.c         | 2 ++
 src/common/compat_threads.c | 2 +-
 src/common/util.c           | 3 ++-
 src/ext/eventdns.c          | 2 +-
 5 files changed, 8 insertions(+), 3 deletions(-)

diff --git a/src/common/address.c b/src/common/address.c
index 86c32ef..53f72f7 100644
--- a/src/common/address.c
+++ b/src/common/address.c
@@ -1490,6 +1490,8 @@ get_interface_addresses_ioctl(int severity, sa_family_t family)
     tor_log(severity, LD_NET, "socket failed: %s", strerror(errno));
     goto done;
   }
+  int nosigpipe = 1;
+  setsockopt(fd, SOL_SOCKET, SO_NOSIGPIPE, &nosigpipe, sizeof(nosigpipe));
 
   int mult = 1;
   ifc.ifc_buf = NULL;
diff --git a/src/common/compat.c b/src/common/compat.c
index fb22e92..ccaa9de 100644
--- a/src/common/compat.c
+++ b/src/common/compat.c
@@ -1224,6 +1224,7 @@ tor_open_socket_with_extensions(int domain, int type, int protocol,
                                 int cloexec, int nonblock)
 {
   tor_socket_t s;
+  int nosigpipe = 1;
 
   /* We are about to create a new file descriptor so make sure we have
    * enough of them. */
@@ -1275,6 +1276,7 @@ tor_open_socket_with_extensions(int domain, int type, int protocol,
   goto socket_ok; /* So that socket_ok will not be unused. */
 
  socket_ok:
+  setsockopt(s, SOL_SOCKET, SO_NOSIGPIPE, &nosigpipe, sizeof(nosigpipe));
   socket_accounting_lock();
   ++n_sockets_open;
   mark_socket_open(s);
diff --git a/src/common/compat_threads.c b/src/common/compat_threads.c
index 85ad737..d692446 100644
--- a/src/common/compat_threads.c
+++ b/src/common/compat_threads.c
@@ -193,7 +193,7 @@ pipe_drain(int fd)
 static int
 sock_alert(tor_socket_t fd)
 {
-  ssize_t r = send_ni(fd, "x", 1, 0);
+  ssize_t r = send_ni(fd, "x", 1, SO_NOSIGPIPE);
   if (r < 0 && !ERRNO_IS_EAGAIN(tor_socket_errno(fd)))
     return -1;
   return 0;
diff --git a/src/common/util.c b/src/common/util.c
index 04f48a4..07a07fb 100644
--- a/src/common/util.c
+++ b/src/common/util.c
@@ -63,6 +63,7 @@
 #endif
 #ifdef HAVE_SYS_SOCKET_H
 #include <sys/socket.h>
+#include <sys/types.h>
 #endif
 #ifdef HAVE_SYS_TIME_H
 #include <sys/time.h>
@@ -1925,7 +1926,7 @@ write_all(tor_socket_t fd, const char *buf, size_t count, int isSocket)
 
   while (written != count) {
     if (isSocket)
-      result = tor_socket_send(fd, buf+written, count-written, 0);
+      result = tor_socket_send(fd, buf+written, count-written, SO_NOSIGPIPE);
     else
       result = write((int)fd, buf+written, count-written);
     if (result<0)
